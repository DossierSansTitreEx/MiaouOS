#!/usr/bin/env ruby

require 'securerandom'

# In MiB
IMAGE_SIZE = 32

SECTOR_SIZE = 512
SECTORS = 63
HEADS = 255
CYLINDERS = ((IMAGE_SIZE * 1024 * 1024).to_f / (SECTOR_SIZE * SECTORS * HEADS)).ceil

REAL_SIZE = CYLINDERS * HEADS * SECTORS * SECTOR_SIZE

BUFFER = ("\x00".force_encoding('binary')) * SECTOR_SIZE

File.open(ARGV.shift, "wb") do |file|
  (REAL_SIZE / SECTOR_SIZE).times do
    file.write(BUFFER)
  end
  file.rewind
  file.write(File.binread ARGV.shift)

  # We fix the mbr values
  partition = []
  partition << 0x80
  partition << 0x00
  partition << 41
  partition << 0x7f
  partition << 254
  partition << (((CYLINDERS - 1) << 8) | SECTORS)
  partition << 40
  partition << (REAL_SIZE / SECTOR_SIZE) - 40
  file.seek(0x1b4)
  file.write(SecureRandom.bytes(10))
  file.write(partition.pack("CCS<CCS<L<L<"))

  # Inject the VBR + stage2
  file.seek(40 * SECTOR_SIZE)
  file.write(File.binread(ARGV.shift))
end
